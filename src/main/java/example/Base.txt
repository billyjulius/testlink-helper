package Test;


import net.serenitybdd.jbehave.SerenityStory;
import net.thucydides.core.model.DataTable;
import net.thucydides.core.model.DataTableRow;
import net.thucydides.core.model.TestOutcome;
import net.thucydides.core.model.TestStep;
import net.thucydides.core.steps.StepEventBus;
import org.jbehave.core.annotations.AfterScenario;
import org.jbehave.core.annotations.ScenarioType;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import TestLink.StepResult;
import TestLink.TestLinkMain;

public class Base extends SerenityStory {

    protected TestOutcome testOutcome;
    protected String errorMessage;
    protected Boolean isSuccess = true;
    protected List<String> exampleValues = new ArrayList<>();

    String TESTLINK_URL = "";
    String TESTLINK_KEY = "";

    String _PROJECTNAME = "";
    Integer _PROJECTID = 1169;
    Integer _VERSION = 1;
    String _BUILDNAME = "Automated";
    String _PLANNAME = "";
    String _USERNAME = "";
    String _TCSUMMARY = "";

    @AfterScenario(uponType = ScenarioType.ANY)
    public void TestLinkIntegration() {
        this.testOutcome = GetTestOutcome();

        String TestCaseName = GetTestCaseName();

        //  Suite ID from scenario name with pattern '1234567'
        // Integer SuiteID = ParseSuiteID(TestCaseName);

        //  Suite ID hardcode if necessary
        Integer SuiteID = 2812;

        System.out.println("");
        System.out.println("<====================================>");
        System.out.println("");

        System.out.println("DEBUG TEST CASE NAME : " + TestCaseName);

        List<StepResult> stepResults = GetTestResult();

        for (StepResult stepResult : stepResults) {
            System.out.println("DEBUG TEST STEP NAME : " + stepResult.getName() + " ("+ stepResult.getStatus() +")"); }

        TestLinkMain testLinkMain = new TestLinkMain(TESTLINK_URL, TESTLINK_KEY);
        testLinkMain.Init(_PROJECTNAME, _PROJECTID, _VERSION, _BUILDNAME, _PLANNAME, _USERNAME);
        if(stepResults.size() > 0) {
            testLinkMain.Run(TestCaseName, _TCSUMMARY, this.isSuccess, this.errorMessage, stepResults, SuiteID);
        }
    }

    private TestOutcome GetTestOutcome() {
        List<TestOutcome> testOutcomeList= StepEventBus.getEventBus().getBaseStepListener().getTestOutcomes();

        TestOutcome testOutcome = testOutcomeList.get(testOutcomeList.size()-1);

        errorMessage = "";
        if(testOutcome.isFailure() || testOutcome.isError()) {
            errorMessage = testOutcome.getErrorMessage();
            System.out.println("DEBUG ERROR : " + testOutcome.getTestFailureCause().getMessage());
            isSuccess = false;
        }

        return testOutcome;
    }

    private String GetTestCaseName() {
        return this.testOutcome.getName();
    }

    private List<StepResult> GetTestResult() {
        List<TestStep> testStepList = this.testOutcome.getTestSteps();
        List<StepResult> stepResults =  new ArrayList<StepResult>();

        for(TestStep testStep : testStepList) {

            /*
             * Kalo ga punya childern - pass
             * Kalo punya children dan description ada pattern Example #\d+ - pass
             * Kalo puunya children dan description ga punya pattern Example #\d+ - abort
             */

            Boolean exampleStories = testStep.getDescription().toString().matches("(.*)Example #\\d+(.*)");
            if(testStep.getChildren().size() > 0 && exampleStories) {
                // Jbehave scenario with examples
                DataTable dataTable = this.testOutcome.getDataTable();
                List<String> exampleFields = dataTable.getHeaders();
                List<DataTableRow> exampleValuesRow = dataTable.getRows();

                for (DataTableRow dataTableRow : exampleValuesRow) {
                    List<String> values_temp = dataTableRow.getStringValues();
                    for (String value : values_temp) {
                        this.exampleValues.add(value.toString());
                    }
                }

                if(_TCSUMMARY == "") {
                    _TCSUMMARY += "fields = " + String.join(",", exampleFields) + "\n";
                    _TCSUMMARY += "values = " + String.join(",", this.exampleValues) + "\n";
                }

                if(stepResults.size() == 0) {
                    List<TestStep> childrenSteps = testStep.getChildren();
                    for (TestStep testStep1 : childrenSteps) {
                        StepResult stepResult = new StepResult();
                        stepResult.name = testStep1.getDescription();
                        stepResult.status = testStep1.isFailure() || testStep.isError() ? "Failed" : "Success";
                        stepResults.add(stepResult);
                    }
                }
            }

            if(testStep.getChildren().size() == 0 && !exampleStories) {
                _TCSUMMARY = this.testOutcome.getName();
                StepResult stepResult = new StepResult();
                stepResult.name = testStep.getDescription();
                stepResult.status = testStep.isFailure() || testStep.isError() ? "Failed" : "Success";
                stepResults.add(stepResult);
            }
        }

        return stepResults;
    }

    private Integer ParseSuiteID(String TestCaseName) {
        Pattern pattern = Pattern.compile("'(\\d+)'");
        Matcher matcher = pattern.matcher(TestCaseName);

        if(matcher.find()) {
            return Integer.parseInt(matcher.group(1));
        }

        return null;
    }
}
